Általános tudnivalók
Ebben az ismertetésben az osztályok, valamint a minimálisan szükséges metódusok leírásai fognak szerepelni. A feladatmegoldás során fontos betartani az elnevezésekre és típusokra vonatkozó megszorításokat, illetve a szövegek formázási szabályait.

Segédfüggvények létrehozhatóak, a feladatban nem megkötött adattagok és elnevezéseik is a feladat megoldójára vannak bízva. Törekedjünk arra, hogy az osztályok belsõ reprezentációját a lehetõ legjobban védjük, tehát csak akkor engedjünk, és csak olyan hozzáférést, amelyre a feladat felszólít, vagy amit azt osztályt használó kódrészlet megkíván!

A beadott megoldásodnak mûködnie kell a mellékelt tesztprogramokkal, de ez nem elégséges feltétele az elfogadásnak. A megírt forráskód legyen kellõen általános és újrafelhasználható!

Használható segédanyagok: Java dokumentáció [https://bead.inf.elte.hu/files/java/], legfeljebb egy üres lap és toll. Ha bármilyen kérdés, észrevétel felmerül, azt a felügyelõknek kell jelezni, NEM a diáktársaknak!

A feladat összefoglaló leírása
A feladatban könyvtárat készítünk, benne könyvekkel.

A programhoz tartozik egységtesztelõ, amely az egyes osztályok funkcionalitását teszteli, illetve a várható pontszámot mutatja.

A feladat részletes ismertetése
Könyv
Valósítsuk meg a konyvtar.Konyv osztályt, amelynek az a feladata, hogy ábrázolja a könyvek adatait.

Két adattagja van: a cim, amely egy szöveg, és a kategoriak, amely szövegek egy tetszõlegesen hosszú, de nem dinamikusan növekvõ tömbje.

Az osztály egyik konstruktora két paramétert vár: a könyv címét és kategóriáit, és egyszerûen tárolja ezeket el.

A második konstruktor a könyv adatait egyetlen szövegként kapja meg: a cím és a kategóriák. Ez utóbbiak vesszõkkel vannak elválasztva. Ha nincsenek kategóriák, akkor a szöveg nem tartalmaz vesszõt. A konstruktor bontsa szét a szöveget, és töltse fel az adattagokat.

Segítség: a szöveg szétbontásához használjuk a String osztály split metódusát.

Legyen egy osztályszintû javaKonyv nevû könyv típusú adattag, amelynek a címe legyen Java, és két kategóriája legyen: java és programozas.

Az adattagokhoz tartozzanak ,,getter'' és ,,setter'' mûveletek. Ezek a mûveletek és a konstruktorok ne szivárogtassák ki a belsõ állapotot: a tömb adattagok másolatait adják ki/állítsák be az adattagba, ne egyszerûen a tömb referenciáját.

Tartalmazzon az osztály saját toString megvalósítást. Az eredmény legyen "Konyv[Nev1, [katA, katB, katC, katD]", ha a könyv címe Nev1, a kategóriái pedig katA, katB, katC és katD.

Legyen egy hasKategoria függvénye, amely megkapja szövegesen egy kategória nevét, és visszatér azzal, hogy a könyv a kategóriába tartozik-e vagy sem.

Könyvtár
Valósítsuk meg a konyvtar.Konyvtar osztályt.

A könyvtárnak legyen egy nev adattagja (szöveg) és tartozzanak bele konyvek (Konyvek nem növekvõ méretû tömbje).

A konstruktora egy fájlnevet kap szövegesen paraméterként. Feltételezhetõ, hogy a fájl létezik (ha mégsem létezne, a konstruktor engedje ki a keletkezõ kivételt), és helyesen van kitöltve: az elsõ sorában tartalmazza a könyvtár nevét, a másodikban a benne található könyvek számát, a fennmaradó sorokban pedig egy-egy könyv adatait. A könyvek adatai olyan alakúak, ahogyan azt a Konyv második konstruktora elvárja. A Konyvtar konstruktora olvassa be a fájl adatait, és töltse fel az adattagokat.

A toString mûveletnek itt is legyen saját megvalósítása. A példaként adott konyvtar1.txt fájlban leírt könyvtár "Konyvtar:(Kvt1, Konyv[Nev1, [katA, katB, katC, katD]], Konyv[Nev2, [katA, katE]], Konyv[Nev3, [katB, katC, katF]])" kimenetet adjon.

Legyen egy getKategoriaKonyvei mûvelete. Ez szövegesen megkapja egy kategória nevét, és azokat a könyveket adja vissza egy List listában, amelyek ebbe a kategóriába tartoznak.

Pontozás
A tesztelõ által adott pontszám csak becslésnek tekinthetõ, a gyakorlatvezetõ levonhat pontokat, vagy adhat részpontokat.

0 - 13: elégtelen (1)
14 - 19 : elégséges (2)
20 - 27 : közepes (3)
28 - 33 : jó (4)
34 - 41 : jeles (5)
Jó munkát!